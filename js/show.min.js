const mathCursor = {lerp: (t, s, a) => (1 - a) * t + a * s};

class Cursor {
    constructor() {
        this.el = document.querySelector("[data-cursor]"), this.hovers = document.querySelectorAll("[data-hover]"), this.drags = document.querySelectorAll("[data-drag]"), this.data = {
            mouse: {
                x: -200,
                y: -200
            },
            current: {x: -200, y: -200},
            last: {x: -200, y: -200},
            ease: .1,
            dist: 50,
            fx: {diff: 0, acc: 0, velo: 0, scale: 0}
        }, this.rAF = null, this.targets = null, this.run = this.run.bind(this), this.mousePos = this.mousePos.bind(this), this.init()
    }

    mousePos(t) {
        this.data.mouse.x = t.offsetX, this.data.mouse.y = t.offsetY, this.data.current.x = t.offsetX, this.data.current.y = t.offsetY
    }

    run() {
        this.data.last.x = mathCursor.lerp(this.data.last.x, this.data.current.x, this.data.ease), this.data.last.y = mathCursor.lerp(this.data.last.y, this.data.current.y, this.data.ease), this.data.fx.diff = this.data.current.x - this.data.last.x, this.data.fx.acc = this.data.fx.diff / window.innerWidth, this.data.fx.velo = +this.data.fx.acc;
        let t = 1 - Math.abs(3 * this.data.fx.velo);
        this.data.fx.scale = .7 < t ? t : .7, this.el.style.transform = `translate3d(${this.data.last.x}px, ${this.data.last.y}px, 0) scale(${this.data.fx.scale})`, this.raf()
    }

    raf() {
        this.rAF = requestAnimationFrame(this.run)
    }

    addListeners() {
        var t = this, s = document.querySelector("[data-cursor]");
        this.hovers.forEach(function (a) {
            a.addEventListener("mousemove", t.mousePos, {passive: !0}), a.addEventListener("mouseover", t.mousePos, {passive: !0}), a.addEventListener("mouseover", function () {
                var t = a.getAttribute("data-hover"), e = a.getAttribute("data-style");
                s.querySelector(".cursor_text").innerHTML = t, s.classList.add("is-active"), "fill" == e ? s.classList.add("fill") : s.classList.remove("fill")
            }), a.addEventListener("mouseout", function () {
                s.classList.remove("is-active"), s.classList.remove("fill")
            })
        }), this.drags.forEach(function (t) {
            t.addEventListener("mouseover", function () {
                s.classList.add("is-drag")
            }), t.addEventListener("mouseout", function () {
                s.classList.remove("is-drag")
            })
        })
    }

    init() {
        this.addListeners(), this.raf()
    }

    cancel() {
        window.cancelAnimationFrame(this.rAF)
    }
}

let cursor = new Cursor();
